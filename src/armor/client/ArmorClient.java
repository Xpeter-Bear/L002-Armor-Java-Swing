/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package armor.client;

import armor.common.ArmorInterface;
import armor.dto.ArmorDTO;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AnhTuan
 */
public class ArmorClient extends javax.swing.JFrame {

    Vector<String> header = new Vector<>();
    Vector data = new Vector();
    DefaultTableModel tblModel;
    SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
    ArmorInterface Connect = (ArmorInterface) Naming.lookup("rmi://localhost:11111/ArmorInterface");
    boolean CheckMouseClick = false;

    /**
     * Creates new form ArmorClient
     */
    public ArmorClient() throws NotBoundException, MalformedURLException, RemoteException, IOException {
        initComponents();
        header.add("ArmorID");
        header.add("Classification");
        header.add("TimeOfCreate");
        header.add("Defense");
        tblModel = (DefaultTableModel) this.tblArmor.getModel();
        tblModel.setDataVector(data, header);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblArmor = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtArmorID = new javax.swing.JTextField();
        txtClassification = new javax.swing.JTextField();
        txtTimeOfCreate = new javax.swing.JTextField();
        txtDefense = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        btnFindByID = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnGetAll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblArmor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblArmor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblArmorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblArmor);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Armor's Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel1.setText("ArmorID: ");

        jLabel2.setText("Classification:");

        jLabel3.setText("TimeOfCreate:");

        jLabel4.setText("Defense");

        jLabel5.setText("Description:");

        jLabel6.setText("Status:");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane2.setViewportView(txtDescription);

        btnFindByID.setText("Find By Armor ID");
        btnFindByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindByIDActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(txtDefense, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimeOfCreate, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtClassification, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtArmorID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStatus))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFindByID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtArmorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFindByID))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(txtClassification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(txtTimeOfCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addComponent(jLabel4))
                    .addComponent(txtDefense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnRemove)
                    .addComponent(btnUpdate))
                .addGap(42, 42, 42))
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("Armor Client");

        btnGetAll.setText("Get All");
        btnGetAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btnGetAll, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(373, 373, 373)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGetAll, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblArmorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblArmorMouseClicked
        CheckMouseClick = false;
        txtArmorID.setEditable(false);
        txtTimeOfCreate.setEditable(false);
        int row = tblArmor.getSelectedRow();
        String ArmorID = tblArmor.getValueAt(row, 0).toString();
        String Classification = tblArmor.getValueAt(row, 1).toString();
        String TimeOfCreate = tblArmor.getValueAt(row, 2).toString();
        String Defense = tblArmor.getValueAt(row, 3).toString();
        txtArmorID.setText(ArmorID);
        txtClassification.setText(Classification);
        txtTimeOfCreate.setText(TimeOfCreate);
        txtDefense.setText(Defense);
        try {
            for (ArmorDTO armorDTO : Connect.findAllArmor()) {
                if (ArmorID.equals(armorDTO.getArmorId())) {
                    txtDescription.setText(armorDTO.getDescription());
                    txtStatus.setText(armorDTO.getStatus());
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(ArmorClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblArmorMouseClicked

    private void btnGetAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetAllActionPerformed
        data.clear();
        tblArmor.updateUI();
        try {
            for (ArmorDTO armorDTO : Connect.findAllArmor()) {
                Vector row = new Vector();
                row.add(armorDTO.getArmorId());
                row.add(armorDTO.getClassification());
                row.add(formatter.format(armorDTO.getTimeOfCreate()));
                row.add(armorDTO.getDefense());
                data.add(row);
                tblArmor.updateUI();
            }
        } catch (IOException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnGetAllActionPerformed

    private boolean Checkdata() {
        String ArmorId = txtArmorID.getText().trim();
        if (ArmorId.length() > 10 || ArmorId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Invalid ID");
            return false;
        }
        int Defence = Integer.parseInt(txtDefense.getText().trim());
        if (Defence < 0) {
            JOptionPane.showMessageDialog(this, "Invalid Defence !!");
            return false;
        }
        String Classification = txtClassification.getText().trim();
        if (Classification.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Invalid Classification");
            return false;
        }
        String Disription = txtDescription.getText().trim();
        if (Disription.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Invalid Disription");
            return false;
        }
        String Status = txtStatus.getText().trim();
        if (Status.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Invalid Status");
            return false;
        }
        return true;
    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        try {
            if (Checkdata() == false) {
                return;
            }
            String ArmorID = txtArmorID.getText();
            String Classificaton = txtClassification.getText();
            String Time = txtTimeOfCreate.getText();
            String Defence = txtDefense.getText();
            String Description = txtDescription.getText();
            String Status = txtStatus.getText();
            ArmorDTO armorDTO = new ArmorDTO(ArmorID, Classificaton, Description, Status, formatter.parse(Time), Integer.parseInt(Defence));
            if (Connect.updateArmor(armorDTO)) {
                JOptionPane.showMessageDialog(this, "Update Successfull!!!");
                btnGetAllActionPerformed(null);
            } else {
                JOptionPane.showMessageDialog(this, "Update Failed!!!");
            }

        } catch (ParseException | IOException ex) {
            Logger.getLogger(ArmorClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblArmor.clearSelection();
        addnew();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed

        try {
            if (tblArmor.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Please Choose Armor you Want To Delete!!");
                return;
            }
            String ArmorID = txtArmorID.getText();
            if (Connect.removeArmor(ArmorID)) {
                JOptionPane.showMessageDialog(this, "Remove Successful!!");
                btnGetAllActionPerformed(null);
                return;

            }
            JOptionPane.showMessageDialog(this, "Remove Failed!!!");
        } catch (IOException ex) {
            Logger.getLogger(ArmorClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblArmor.clearSelection();
        addnew();
    }//GEN-LAST:event_btnRemoveActionPerformed

    @SuppressWarnings("empty-statement")
    private void btnFindByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindByIDActionPerformed
        data.clear();
        tblArmor.clearSelection();
        try {
            String ArmorID = txtArmorID.getText();
            ArmorDTO armorDTO = Connect.findByArmorID(ArmorID);
            if (armorDTO == null) {
                JOptionPane.showMessageDialog(this, "this Code Invalid");
                return;
            }

            Vector row = new Vector();
            row.add(armorDTO.getArmorId());

            row.add(armorDTO.getClassification());
            row.add(formatter.format(armorDTO.getTimeOfCreate()));
            row.add(String.valueOf(armorDTO.getDefense()));
            data.add(row);
        } catch (IOException ex) {
            Logger.getLogger(ArmorClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblArmor.updateUI();
    }//GEN-LAST:event_btnFindByIDActionPerformed
    private void addnew() {
        txtArmorID.setText("");
        txtArmorID.setEditable(true);
        txtClassification.setText("");
        Date date = new Date();
        txtTimeOfCreate.setText(formatter.format(date));
        txtTimeOfCreate.setEnabled(false);
        txtDefense.setText("");
        txtDescription.setText("");
        txtStatus.setText("");
    }


    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        try {
            tblArmor.clearSelection();
            String ArmorID = txtArmorID.getText();
            if (!CheckMouseClick) {
                addnew();
                CheckMouseClick = true;
            }else if(Connect.findByArmorID(ArmorID) != null) {
                JOptionPane.showMessageDialog(this, "ID  Duplicated");
                return;
            }
            else {
                String Classificaton = txtClassification.getText();
                String Time = txtTimeOfCreate.getText();
                String Defence = txtDefense.getText();
                String Description = txtDescription.getText();
                String Status = txtStatus.getText();
                if (Checkdata()) {
                    try {
                        ArmorDTO armorDTO = new ArmorDTO(ArmorID, Classificaton, Description, Status, formatter.parse(Time), Integer.parseInt(Defence));
                        Connect.createArmor(armorDTO);
                    } catch (ParseException | IOException ex) {
                        Logger.getLogger(ArmorClient.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            btnGetAllActionPerformed(null);
        } catch (IOException ex) {
            Logger.getLogger(ArmorClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArmorClient.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArmorClient.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArmorClient.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArmorClient.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ArmorClient().setVisible(true);

                } catch (NotBoundException ex) {
                    Logger.getLogger(ArmorClient.class
                            .getName()).log(Level.SEVERE, null, ex);

                } catch (MalformedURLException ex) {
                    Logger.getLogger(ArmorClient.class
                            .getName()).log(Level.SEVERE, null, ex);

                } catch (RemoteException ex) {
                    Logger.getLogger(ArmorClient.class
                            .getName()).log(Level.SEVERE, null, ex);

                } catch (IOException ex) {
                    Logger.getLogger(ArmorClient.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnFindByID;
    private javax.swing.JButton btnGetAll;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblArmor;
    private javax.swing.JTextField txtArmorID;
    private javax.swing.JTextField txtClassification;
    private javax.swing.JTextField txtDefense;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtTimeOfCreate;
    // End of variables declaration//GEN-END:variables

}
